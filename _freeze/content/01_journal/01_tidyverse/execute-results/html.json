{
  "hash": "f8e088657916e8e9d5a0acb9beedde4c",
  "result": {
    "markdown": "# Data Science at TUHH ------------------------------------------------------\n# SALES ANALYSIS ----\n\n# 1.0 Load libraries ----\nlibrary(\"tidyverse\")\nlibrary(\"readxl\")\n\n# 2.0 Importing Files ----\nbikes_tbl      <- read_excel(path =\"ds_data/01_bike_sales/01_raw_data/bikes.xlsx\")\norderlines_tbl <- read_excel(\"ds_data/01_bike_sales/01_raw_data/orderlines.xlsx\")\nbikeshops_tbl  <- read_excel(\"ds_data/01_bike_sales/01_raw_data/bikeshops.xlsx\")\n\n# 3.0 Examining Data ----\norderlines_tbl\nbikes_tbl\nglimpse(orderlines_tbl)\n# 4.0 Joining Data ----\nbike_orderlines_joined_tbl <- orderlines_tbl %>%\n  left_join(bikes_tbl, by = c(\"product.id\" = \"bike.id\")) %>%\n  left_join(bikeshops_tbl, by = c(\"customer.id\" = \"bikeshop.id\"))\nbike_orderlines_joined_tbl %>% glimpse()\nbike_orderlines_joined_tbl\n# 5.0 Wrangling Data ----\nbike_orderlines_joined_tbl$category\nbike_orderlines_joined_tbl %>% \n  select(category) %>%\n  filter(str_detect(category, \"^Mountain\")) %>% \n  unique()\n\n# All actions are chained with the pipe already. You can perform each step separately and use glimpse() or View() to validate your code. Store the result in a variable at the end of the steps.\nbike_orderlines_joined_tbl\nbike_orderlines_wrangled_tbl <- bike_orderlines_joined_tbl\nbike_orderlines_wrangled_tbl <- bike_orderlines_wrangled_tbl %>%\n  separate(col    = category,\n           into   = c(\"category.1\", \"category.2\", \"category.3\"),\n           sep    = \" - \") %>%\n  \n  mutate(total.price = price * quantity) %>%\n  select(-...1, -gender) %>%\n  select(-ends_with(\".id\")) %>%\n  bind_cols(bike_orderlines_joined_tbl %>% select(order.id)) %>% \n  select(order.id, contains(\"order\"), contains(\"model\"), contains(\"category\"),\n         price, quantity, total.price,\n         everything()) %>%\n  rename(bikeshop = name) %>%\n  set_names(names(.) %>% str_replace_all(\"\\\\.\", \"_\"))\n# 6.0 Business Insights ----\n# 6.1 Sales by Year ----\n\n# Step 1 - Manipulate\nlibrary(\"lubridate\")\n\nsales_by_year_tbl <- bike_orderlines_wrangled_tbl\nsales_by_year_tbl <- sales_by_year_tbl %>%\n select(order_id, order_date, quantity, price, total_price) %>%\n mutate(order_year = year(order_date)) %>%\n group_by(order_year) %>%\n summarize(sales = sum(total_price))\n\n\n# Step 2 - Visualize\n\n\n# 6.2 Sales by Year and Category 2 ----\nsales_by_year_tbl %>%\n  \n  # Setup canvas with the columns year (x-axis) and sales (y-axis)\n  ggplot(aes(x = order_year, y = sales)) +\n  \n  # Geometries\n  geom_col(fill = \"#2DC6D6\") + # Use geom_col for a bar plot\n  geom_label(aes(label = sales)) + # Adding labels to the bars\n  geom_smooth(method = \"lm\", se = FALSE) + # Adding a trendline\n  \n  # Formatting\n  # scale_y_continuous(labels = scales::dollar) + # Change the y-axis. \n  # Again, we have to adjust it for euro values\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title    = \"Revenue by year\",\n    subtitle = \"Upward Trend\",\n    x = \"\", # Override defaults for x and y\n    y = \"Revenue\"\n  )\n# Step 1 - Manipulate\nlibrary(\"lubridate\")\n\nsales_by_year_category_tbl <- bike_orderlines_wrangled_tbl\nsales_by_year_category_tbl <- sales_by_year_category_tbl %>%\n  select(order_id, order_date, quantity, price, category_1, total_price) %>%\n  mutate(order_year = year(order_date)) %>%\n  group_by(order_year, category_1) %>%\n  summarise(sales = sum(total_price)) %>%\n  ungroup() %>%\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\nsales_by_year_category_tbl\n  \n\n# Step 2 - Visualize\nsales_by_year_category_tbl %>%\n  \n  # Setup canvas with the columns year (x-axis) and sales (y-axis)\n  ggplot(aes(x = order_year, y = sales, fill = category_1)) +\n  \n  # Geometries\n  geom_col() +\n  #geom_col(fill = \"#2DC6D6\") + # Use geom_col for a bar plot\n  #geom_label(aes(label = sales_text)) + # Adding labels to the bars\n  geom_smooth(method = \"lm\", se = FALSE) + # Adding a trendline\n  \n  #facets\n  facet_wrap(~category_1)+\n  # Formatting\n  # scale_y_continuous(labels = scales::dollar) + # Change the y-axis. \n  # Again, we have to adjust it for euro values\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title    = \"Revenue by year and main category\",\n    subtitle = \"Each product category has an upward trend\",\n    fill = \"Main category\"\n    #x = \"\", # Override defaults for x and y\n    #y = \"Revenue\"\n  )\n\n\n# 7.0 Writing Files ----\n\n# 7.1 Excel ----\ninstall.packages(\"writexl\")\nlibrary(\"writexl\")\nbike_orderlines_wrangled_tbl %>%\n  write_xlsx(\"ds_data/01_bike_sales/02_wrangled_data/bike_orderlines.xlsx\")\n\n# 7.2 CSV ----\nbike_orderlines_wrangled_tbl %>% \n  write_csv(\"ds_data/01_bike_sales/02_wrangled_data/bike_orderlines.csv\")\n\n# 7.3 RDS ----\nbike_orderlines_wrangled_tbl %>% \n  write_rds(\"ds_data/01_bike_sales/02_wrangled_data/bike_orderlines.rds\")\n\n\n\n[![Caption](../../assets/img/elephant.png)](https://quarto.org)\n\n[![Caption](../../assets/img/elephant.png)](https://quarto.org \"An elephant\")\n\n\n# Lists\n\n* unordered list\n    + sub-item 1\n    + sub-item 2\n        - sub-sub-item 1\n        \n*   item 2\n\n    Continued (indent 4 spaces)\n    \n    \n1. ordered list\n2. item 2\n    i) sub-item 1\n         A.  sub-sub-item 1\n         \n(@)  A list whose numbering\n\ncontinues after\n\n(@)  an interruption\n\n# Tables\n\n| Right | Left | Default | Center |\n|------:|:-----|---------|:------:|\n|   12  |  12  |    12   |    12  |\n|  123  |  123 |   123   |   123  |\n|    1  |    1 |     1   |     1  |\n\n# Source Code\n\nUse ``` to delimit blocks of source code:\n\n```\ncode\n```\n\nAdd a language to syntax highlight code blocks:\n\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-1_78745102f85d5cf89cad6fe4a83ca938'}\n\n```{.r .cell-code}\n1 + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 2\n```\n:::\n:::\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-2_f6e8e1bca112a7054679dca3031b6157'}\n\n```{.r .cell-code}\ncars\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"speed\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"dist\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"4\",\"2\":\"2\"},{\"1\":\"4\",\"2\":\"10\"},{\"1\":\"7\",\"2\":\"4\"},{\"1\":\"7\",\"2\":\"22\"},{\"1\":\"8\",\"2\":\"16\"},{\"1\":\"9\",\"2\":\"10\"},{\"1\":\"10\",\"2\":\"18\"},{\"1\":\"10\",\"2\":\"26\"},{\"1\":\"10\",\"2\":\"34\"},{\"1\":\"11\",\"2\":\"17\"},{\"1\":\"11\",\"2\":\"28\"},{\"1\":\"12\",\"2\":\"14\"},{\"1\":\"12\",\"2\":\"20\"},{\"1\":\"12\",\"2\":\"24\"},{\"1\":\"12\",\"2\":\"28\"},{\"1\":\"13\",\"2\":\"26\"},{\"1\":\"13\",\"2\":\"34\"},{\"1\":\"13\",\"2\":\"34\"},{\"1\":\"13\",\"2\":\"46\"},{\"1\":\"14\",\"2\":\"26\"},{\"1\":\"14\",\"2\":\"36\"},{\"1\":\"14\",\"2\":\"60\"},{\"1\":\"14\",\"2\":\"80\"},{\"1\":\"15\",\"2\":\"20\"},{\"1\":\"15\",\"2\":\"26\"},{\"1\":\"15\",\"2\":\"54\"},{\"1\":\"16\",\"2\":\"32\"},{\"1\":\"16\",\"2\":\"40\"},{\"1\":\"17\",\"2\":\"32\"},{\"1\":\"17\",\"2\":\"40\"},{\"1\":\"17\",\"2\":\"50\"},{\"1\":\"18\",\"2\":\"42\"},{\"1\":\"18\",\"2\":\"56\"},{\"1\":\"18\",\"2\":\"76\"},{\"1\":\"18\",\"2\":\"84\"},{\"1\":\"19\",\"2\":\"36\"},{\"1\":\"19\",\"2\":\"46\"},{\"1\":\"19\",\"2\":\"68\"},{\"1\":\"20\",\"2\":\"32\"},{\"1\":\"20\",\"2\":\"48\"},{\"1\":\"20\",\"2\":\"52\"},{\"1\":\"20\",\"2\":\"56\"},{\"1\":\"20\",\"2\":\"64\"},{\"1\":\"22\",\"2\":\"66\"},{\"1\":\"23\",\"2\":\"54\"},{\"1\":\"24\",\"2\":\"70\"},{\"1\":\"24\",\"2\":\"92\"},{\"1\":\"24\",\"2\":\"93\"},{\"1\":\"24\",\"2\":\"120\"},{\"1\":\"25\",\"2\":\"85\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-3_c54f7526e0f7f04368360fa7b6e5663a'}\n\n```{.r .cell-code}\nplot(cars)\n```\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}