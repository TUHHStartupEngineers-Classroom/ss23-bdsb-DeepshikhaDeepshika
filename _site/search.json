[
  {
    "objectID": "content/03_other/06_links.html",
    "href": "content/03_other/06_links.html",
    "title": "Links",
    "section": "",
    "text": "R is a free open-source programming language that can be used for statistical analysis, data-simulation, graphing, and lots of other stuff. Another free program is R-studio, that provides a nice graphic interface for R. Download R first, then download R-studio. Both can run on PCs, Macs or Linux. Students will be learning R in the stats labs using the lab manual .\n\n\n\n\nGoogle is great, Google your problem\nStackoverflow is great, google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways."
  },
  {
    "objectID": "content/01_journal/03_data_wrangling.html",
    "href": "content/01_journal/03_data_wrangling.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/04_data_visualization.html",
    "href": "content/01_journal/04_data_visualization.html",
    "title": "Data Visualization",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/01_tidyverse.html",
    "href": "content/01_journal/01_tidyverse.html",
    "title": "MyLabJournal",
    "section": "",
    "text": "1 Data Science at TUHH ——————————————————\n\n2 SALES ANALYSIS —-\n\n3 1.0 Load libraries —-\nlibrary(“tidyverse”) library(“readxl”)\n\n4 2.0 Importing Files —-\nbikes_tbl <- read_excel(path =“ds_data/01_bike_sales/01_raw_data/bikes.xlsx”) orderlines_tbl <- read_excel(“ds_data/01_bike_sales/01_raw_data/orderlines.xlsx”) bikeshops_tbl <- read_excel(“ds_data/01_bike_sales/01_raw_data/bikeshops.xlsx”)\n\n5 3.0 Examining Data —-\norderlines_tbl bikes_tbl glimpse(orderlines_tbl) # 4.0 Joining Data —- bike_orderlines_joined_tbl <- orderlines_tbl %>% left_join(bikes_tbl, by = c(“product.id” = “bike.id”)) %>% left_join(bikeshops_tbl, by = c(“customer.id” = “bikeshop.id”)) bike_orderlines_joined_tbl %>% glimpse() bike_orderlines_joined_tbl # 5.0 Wrangling Data —- bike_orderlines_joined_tbl$category bike_orderlines_joined_tbl %>% select(category) %>% filter(str_detect(category, “^Mountain”)) %>% unique()\n\n6 All actions are chained with the pipe already. You can perform each step separately and use glimpse() or View() to validate your code. Store the result in a variable at the end of the steps.\nbike_orderlines_joined_tbl bike_orderlines_wrangled_tbl <- bike_orderlines_joined_tbl bike_orderlines_wrangled_tbl <- bike_orderlines_wrangled_tbl %>% separate(col = category, into = c(“category.1”, “category.2”, “category.3”), sep = ” - “) %>%\nmutate(total.price = price * quantity) %>% select(-…1, -gender) %>% select(-ends_with(“.id”)) %>% bind_cols(bike_orderlines_joined_tbl %>% select(order.id)) %>% select(order.id, contains(“order”), contains(“model”), contains(“category”), price, quantity, total.price, everything()) %>% rename(bikeshop = name) %>% set_names(names(.) %>% str_replace_all(“\\.”, “_“)) # 6.0 Business Insights —- # 6.1 Sales by Year —-\n\n7 Step 1 - Manipulate\nlibrary(“lubridate”)\nsales_by_year_tbl <- bike_orderlines_wrangled_tbl sales_by_year_tbl <- sales_by_year_tbl %>% select(order_id, order_date, quantity, price, total_price) %>% mutate(order_year = year(order_date)) %>% group_by(order_year) %>% summarize(sales = sum(total_price))\n\n8 Step 2 - Visualize\n\n9 6.2 Sales by Year and Category 2 —-\nsales_by_year_tbl %>%\n# Setup canvas with the columns year (x-axis) and sales (y-axis) ggplot(aes(x = order_year, y = sales)) +\n# Geometries geom_col(fill = “#2DC6D6”) + # Use geom_col for a bar plot geom_label(aes(label = sales)) + # Adding labels to the bars geom_smooth(method = “lm”, se = FALSE) + # Adding a trendline\n# Formatting # scale_y_continuous(labels = scales::dollar) + # Change the y-axis. # Again, we have to adjust it for euro values scale_y_continuous(labels = scales::dollar_format(big.mark = “.”, decimal.mark = “,”, prefix = ““, suffix =” €“)) + labs( title =”Revenue by year”, subtitle = “Upward Trend”, x = ““, # Override defaults for x and y y =”Revenue” ) # Step 1 - Manipulate library(“lubridate”)\nsales_by_year_category_tbl <- bike_orderlines_wrangled_tbl sales_by_year_category_tbl <- sales_by_year_category_tbl %>% select(order_id, order_date, quantity, price, category_1, total_price) %>% mutate(order_year = year(order_date)) %>% group_by(order_year, category_1) %>% summarise(sales = sum(total_price)) %>% ungroup() %>% mutate(sales_text = scales::dollar(sales, big.mark = “.”, decimal.mark = “,”, prefix = ““, suffix =” €“))\nsales_by_year_category_tbl\n\n10 Step 2 - Visualize\nsales_by_year_category_tbl %>%\n# Setup canvas with the columns year (x-axis) and sales (y-axis) ggplot(aes(x = order_year, y = sales, fill = category_1)) +\n# Geometries geom_col() + #geom_col(fill = “#2DC6D6”) + # Use geom_col for a bar plot #geom_label(aes(label = sales_text)) + # Adding labels to the bars geom_smooth(method = “lm”, se = FALSE) + # Adding a trendline\n#facets facet_wrap(~category_1)+ # Formatting # scale_y_continuous(labels = scales::dollar) + # Change the y-axis. # Again, we have to adjust it for euro values scale_y_continuous(labels = scales::dollar_format(big.mark = “.”, decimal.mark = “,”, prefix = ““, suffix =” €“)) + labs( title =”Revenue by year and main category”, subtitle = “Each product category has an upward trend”, fill = “Main category” #x = ““, # Override defaults for x and y #y =”Revenue” )\n\n11 7.0 Writing Files —-\n\n12 7.1 Excel —-\ninstall.packages(“writexl”) library(“writexl”) bike_orderlines_wrangled_tbl %>% write_xlsx(“ds_data/01_bike_sales/02_wrangled_data/bike_orderlines.xlsx”)\n\n13 7.2 CSV —-\nbike_orderlines_wrangled_tbl %>% write_csv(“ds_data/01_bike_sales/02_wrangled_data/bike_orderlines.csv”)\n\n14 7.3 RDS —-\nbike_orderlines_wrangled_tbl %>% write_rds(“ds_data/01_bike_sales/02_wrangled_data/bike_orderlines.rds”)\n\n\nCaption\n\n\n\n\nCaption\n\n\n\n15 Lists\n\n\nunordered list\n\nsub-item 1\nsub-item 2\n\nsub-sub-item 1\n\n\n\n\n\nitem 2\nContinued (indent 4 spaces)\n\n\n\nordered list\nitem 2\n\nsub-item 1\n\nsub-sub-item 1\n\n\n\n\n\n\nA list whose numbering\n\ncontinues after\n\nan interruption\n\n16 Tables\n\n\nRight\nLeft\nDefault\nCenter\n\n\n\n12\n12\n12\n12\n\n\n123\n123\n123\n123\n\n\n1\n1\n1\n1\n\n\n\n17 Source Code\nUse ``` to delimit blocks of source code:\ncode\nAdd a language to syntax highlight code blocks:\n\n1 + 1\n\n#> [1] 2\n\n\n\ncars\n\n\n\n  \n\n\n\n\nplot(cars)"
  },
  {
    "objectID": "content/01_journal/02_data_acquisition.html",
    "href": "content/01_journal/02_data_acquisition.html",
    "title": "Data Acquisition",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/02_notes/05_class_notes.html",
    "href": "content/02_notes/05_class_notes.html",
    "title": "Class Notes",
    "section": "",
    "text": "IMPORTANT: You can delete everything in here and start fresh. You might want to start by not deleting anything above this line until you know what that stuff is doing.\nThis is an .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Lab Journal",
    "section": "",
    "text": "This is a template example for lab journaling. Students in the data science courses at the Institute of Entrepreneurship will use this template to learn R for business analytics. Students can replace this text as they wish."
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "My Lab Journal",
    "section": "How to use",
    "text": "How to use\n\nAccept the assignment and get your own github repo.\nBlog/journal what you are doing in R, by editing the .qmd files.\nSee the links page for lots of helpful links on learning R.\nChange everything to make it your own.\nMake sure to render you website everytime before you want to upload changes"
  }
]